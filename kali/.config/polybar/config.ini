[colors]
background = ${xrdb:background}
; foreground = #105555
foreground = ${xrdb:foreground}

color0 = ${xrdb:color0}
color1 = ${xrdb:color1}
color2 = ${xrdb:color2}
color3 = ${xrdb:color3}
color4 = ${xrdb:color4}
color5 = ${xrdb:color5}
color6 = ${xrdb:color6}
color7 = ${xrdb:color7}
color8 = ${xrdb:color8}
color9 = ${xrdb:color9}
color10 = ${xrdb:color10}
color11 = ${xrdb:color11}
color12 = ${xrdb:color12}
color13 = ${xrdb:color13}
color14 = ${xrdb:color14}
color15 = ${xrdb:color15}
dark-light = #272A2B 
active-light = #313435

[bar/default]
; Use either of the following command to list available outputs:
; $ polybar -M | cut -d ':' -f 1
; $ xrandr -q | grep " connected" | cut -d ' ' -f1
; If no monitor is given, the primary monitor is used if it exists
monitor = rdp0

; Use the specified monitor as a fallback if the main one is not found.
monitor-fallback =

; Require the monitor to be in connected state
monitor-strict = false

; Use fuzzy matching for monitors (only ignores dashes -)
; Useful when monitors are named differently with different drivers.
monitor-exact = true

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for 
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
override-redirect = false

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block. 
; The center block will stay in the middle of the bar whenever
; possible. It can still be pushed around if other blocks need
; more space.
; When false, the center block is centered in the space between 
; the left and right block.
fixed-center = true

; Width and height of the bar window.
; Supports any percentage with offset.
; For 'width', the percentage is relative to the monitor width and for 'height'
; relative to the monitor height
width = 100%
height = 40

; Offset the bar window in the x and/or y direction.
; Supports any percentage with offset relative to the monitor width (offset-x)
; or height (offset-y)
offset-x = 0
offset-y = 5

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.background}

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${colors.foreground}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb

; Value used for drawing rounded corners
; For this to work you may also need to enable pseudo-transparency or use a
; compositor like picom.
; Individual values can be defined using:
;   radius-{top,bottom}
; or
;   radius-{top,bottom}-{left,right} (New in version 3.6.0)
; Polybar always uses the most specific radius definition for each corner.
radius = 0.0

; pseudo-transparency = true

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 1

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size supports any percentage with offset.
; For border-{left,right}-size, the percentage is relative to the monitor width
; and for border-{top,bottom}-size, it is relative to the monitor height.
border-top-size = 5
border-bottom-size = 5
border-top-color = ${colors.background}
border-bottom-color = ${colors.background}

; Padding (number of spaces, pixels, or points) to add at the beginning/end of
; the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 0

; Margin (number of spaces, pixels, or points) to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 0

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = CaskaydiaCove Nerd Font Mono:style=Bold:pixelsize=18;3
font-1 = CaskaydiaCove Nerd Font Mono:size=16;4
font-2 = Material Design Icons:style=Bold:size=14;6
font-3 = unifont:fontformat=truetype:size=12;3

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = bspwm
modules-center = title
modules-right = cpu mem time powermenu

; The separator will be inserted between the output of each module
; This has the same properties as a label
separator =

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
; wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
; locale = 

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = right

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 16

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${root.background}

; Foreground color for the tray icons
; This only gives a hint to the tray icon for its color, it will probably only
; work for GTK3 icons (if at all) because it targets a non-standard part of the
; system tray protocol by setting the _NET_SYSTEM_TRAY_COLORS atom on the tray
; window.
; New in version 3.6.0
tray-foreground = ${root.foreground}

; Offset the tray in the x and/or y direction
; Supports any percentage with offset
; Percentages are relative to the monitor width or height for detached trays
; and relative to the bar window (without borders) for non-detached tray.
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported values:
;   generic (Moves the bar window above the first window in the window stack.
;            Works in xmonad, may not work on other WMs)
;           (New in version 3.6.0)
;   bspwm
;   i3 (requires `override-redirect = true`)
wm-restack = bspwm

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi = 
dpi-x = 96
dpi-y = 96

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
; click-left = 
; click-middle = 
; click-right =
scroll-up = #bspwm.prev
scroll-down = #bspwm.next
; double-click-left =
; double-click-middle =
; double-click-right =

; If two clicks are received within this interval (ms), they are recognized as
; a double click.
; New in version 3.6.0
double-click-interval = 400

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
; cursor-click = 
; cursor-scroll = 


[module/bspwm]
type = internal/bspwm

; Only show workspaces defined on the same output as the bar
; NOTE: The bspwm and XRandR monitor names must match, which they do by default.
; But if you rename your bspwm monitors with bspc -n this option will no longer
; behave correctly.
; Default: true
pin-workspaces = true

; Output mode flags after focused state label
; Default: false
inline-mode = true

; Create click handler used to focus workspace
; Default: true
enable-click = true

; Create scroll handlers used to cycle workspaces
; Default: true
enable-scroll = true

; Set the scroll cycle direction 
; Default: true
reverse-scroll = false

; Use fuzzy (partial) matching on labels when assigning 
; icons to workspaces
; Example: code;♚ will apply the icon to all workspaces 
; containing 'code' in the label
; Default: false
fuzzy-match = false

; Only scroll through occupied workspaces
; Default: false
; New in version 3.6.0
occupied-scroll = false

format = <label-state>

ws-icon-0 = 1;%{F#F9DE8F}  
ws-icon-1 = 2;%{F#ff9b93}   
ws-icon-2 = 3;%{F#95e1d3}    
ws-icon-3 = 4;%{F#81A1C1}
ws-icon-4 = 5;%{F#A3BE8C}

label-separator = " "
label-separator-background = #2a2e36

label-focused =  %icon%  
label-focused-foreground = ${colors.foreground}
label-focused-padding = 1
label-focused-background = #464a52
label-focused-margin = 0 

label-occupied =  %icon%  
label-occupied-foreground = #646870  
label-occupied-background = #2a2e36
label-occupied-padding = 1
label-occupied-margin = 0 

label-empty = %icon%
label-empty-foreground =   ${colors.foreground}
label-empty-padding = 1
label-empty-background = #2a2e36
label-empty-margin = 0 


label-urgent = %icon%
label-urgent-foreground = #88C0D0
label-urgent-background = #2a2e36
label-urgent-padding = 1


[module/time]
type = internal/date
interval = 60

format = <label>
format-background = #2a2e36
format-foreground = #82868e

;date = 󰥔 %H:%M%{F-}
date =  %H:%M%{F-}
;time-alt = 󰃭 %a, %b %d%{F-}
time-alt =  %a, %b %d%{F-}

label = %date%%time%


[module/mem]
type = internal/memory
interval = 5
;format = <bar-used> <label>
;format-background = ${colors.foreground}
format-foreground = ${colors.foreground}
label = "  %mb_used% -"
label-padding = 1
;bar-used-width = 1
;bar-used-indicator =
;bar-used-fill = ━
;bar-used-empty = ┉


[module/cpu]
type = internal/cpu
interval = 5

format-prefix ="  " 
format =  <label> 

label = CPU %percentage%%
format-background = #2a2e36
format-foreground = #989cff

; Default: 80
; New in version 3.6.0
warn-percentage = 80


[module/title]
type = internal/xwindow

format = <label>
format-foreground = ${color.fg}

label =   %title%
label-maxlen = 30 ...


[module/xwindow]
type = internal/xwindow
label = %title:0:30:...

